"""
Django settings for BestJob project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

#from celery.schedules import crontab, timedelta

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

sys.path.insert(0, os.path.join(BASE_DIR, 'myapps'))
sys.path.insert(1, os.path.join(BASE_DIR, 'exapps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@j+&x(sfe^vuzz4fp5n_!83mn!h(ts(gd3s%(fm)ds_p&kog0u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
APPEND_SLASH = False
ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'xadmin',
    'crispy_forms',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'DjangoUeditor',
    'userapp',
    'searchapp',
    # 'djcelery',  # django-celery的应用app
]

MIDDLEWARE = [
    'middleware.useragent.UserAgentMiddleware',
    'middleware.ip_count.IpCountMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BestJob.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BestJob.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'final_boss_job',
        'HOST': '127.0.0.1',
        'POST': '3306',
        'USER': 'root',
        'PASSWORD': '',
        'CHARSET': 'UTF8'
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    (os.path.join(BASE_DIR, 'static')),
]

TEMPLATE_DIRS = (os.path.join(BASE_DIR,  'templates'),)


#设置缓存
CACHES = {
    'dbcache': {    #数据库配置，在终端中通过命令创建blob_cache_table包
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'blob_cache_table',
    },
    'filecache': {  #文件配置文件，会将文件缓存存在指定路径---/var/tmp/blob_cache'
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/blob_cache',
    },
    "default": {    #配置redis数据库
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            # "PASSWORD": "109321:"
        }
    }
}

#设置session缓存，将session保存的数据，存入到cache缓存中，不放到数据库中
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

"""
#--------------------------start celery config--------------------------
# import djcelery
# djcelery.setup_loader()  # 装载celery服务,
# BROKER_URL = 'redis://127.0.0.1:6379/10'  # 配置消息中间件位置
# 
# CELERY_TIMEZONE = 'Asia/Shanghai'  # 时区
# 
# # 配置计划任务存储的位置
# CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'
# 
# # 配置定时任务
# SELERY_IMPORTS = ('searchapp.tasks',)  # 导入任务
# CELERYBEAT_SCHEDULE = {
#     u'ReadTask':{
#         'task': 'searchapp.tasks.searchJob',
#         'schedule': crontab(minute='*/2'),  # 每两分钟执行一次
#         'args': (1,8),
#     },
#     u'BuyTask':{
#         'task': 'searchapp.tasks.buyArt',
#         'schedule': timedelta(seconds=5),  # 每5秒钟执行一次
#         'args': (1,5),
#     },
# }

#--------------------------end celery config----------------------------"""

#-------------配置日志----------------
LOGGING = {
    'version':1,
    'disable_existing_loggers':False,

    # 日志格式对象
    'formatters':{
        'info':{
            'format':'[<%(asctime)s>:%(funcName)s-%(lineno)s]>>%(message)s',
            'datefmt':'%Y-%m-%d %H:%M:%S',
        }
    },

    # 过滤器
    'filters':{

    },
    # 处理器：格式器 Formatter
    'handlers':{
        'console':{
            'level':'INFO',
            'formatter':'info',
            'class':'logging.StreamHandler'
        },
        'logFile':{
            'level':'INFO',
            'formatter':'info',
            'class':'logging.handlers.TimedRotatingFileHandler',
            'filename':'log/a.log',
        }
    },
    # 日志对象， 处理器Handler,
    'loggers':{
        'mdjango':{
            'handlers':['console','logFile'],
            'level':'INFO',
            'propagate':False,
        }
    },

}